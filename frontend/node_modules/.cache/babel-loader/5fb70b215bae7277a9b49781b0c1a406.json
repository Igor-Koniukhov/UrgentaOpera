{"remainingRequest":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/babel-loader/lib/index.js!/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/vuetify/lib/components/VCalendar/util/parser.js","dependencies":[{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/vuetify/lib/components/VCalendar/util/parser.js","mtime":1649410683376},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/babel.config.js","mtime":1650298088740},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1649410681772},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/babel-loader/lib/index.js","mtime":1649410682196}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL2hvbWUvaWdvci8xX3BldF9wcm9qZWN0cy80X3RvZG9fdXJnZW50YS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMi5qcyI7CmltcG9ydCBfdHlwZW9mIGZyb20gIi9ob21lL2lnb3IvMV9wZXRfcHJvamVjdHMvNF90b2RvX3VyZ2VudGEvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXMtYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwpleHBvcnQgZnVuY3Rpb24gcGFyc2VkQ2F0ZWdvcnlUZXh0KGNhdGVnb3J5LCBjYXRlZ29yeVRleHQpIHsKICByZXR1cm4gdHlwZW9mIGNhdGVnb3J5VGV4dCA9PT0gJ3N0cmluZycgJiYgX3R5cGVvZihjYXRlZ29yeSkgPT09ICdvYmplY3QnICYmIGNhdGVnb3J5ID8gY2F0ZWdvcnlbY2F0ZWdvcnlUZXh0XSA6IHR5cGVvZiBjYXRlZ29yeVRleHQgPT09ICdmdW5jdGlvbicgPyBjYXRlZ29yeVRleHQoY2F0ZWdvcnkpIDogY2F0ZWdvcnk7Cn0KZXhwb3J0IGZ1bmN0aW9uIGdldFBhcnNlZENhdGVnb3JpZXMoY2F0ZWdvcmllcywgY2F0ZWdvcnlUZXh0KSB7CiAgaWYgKHR5cGVvZiBjYXRlZ29yaWVzID09PSAnc3RyaW5nJykgcmV0dXJuIGNhdGVnb3JpZXMuc3BsaXQoL1xzKixccy8pOwoKICBpZiAoQXJyYXkuaXNBcnJheShjYXRlZ29yaWVzKSkgewogICAgcmV0dXJuIGNhdGVnb3JpZXMubWFwKGZ1bmN0aW9uIChjYXRlZ29yeSkgewogICAgICBpZiAodHlwZW9mIGNhdGVnb3J5ID09PSAnc3RyaW5nJykgcmV0dXJuIGNhdGVnb3J5OwogICAgICB2YXIgY2F0ZWdvcnlOYW1lID0gdHlwZW9mIGNhdGVnb3J5LmNhdGVnb3J5TmFtZSA9PT0gJ3N0cmluZycgPyBjYXRlZ29yeS5jYXRlZ29yeU5hbWUgOiBwYXJzZWRDYXRlZ29yeVRleHQoY2F0ZWdvcnksIGNhdGVnb3J5VGV4dCk7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGNhdGVnb3J5KSwge30sIHsKICAgICAgICBjYXRlZ29yeU5hbWU6IGNhdGVnb3J5TmFtZQogICAgICB9KTsKICAgIH0pOwogIH0KCiAgcmV0dXJuIFtdOwp9"},{"version":3,"mappings":";;;;;;AAEA,OAAM,SAAUA,kBAAV,CACJC,QADI,EAEJC,YAFI,EAE+C;AAEnD,SAAO,OAAOA,YAAP,KAAwB,QAAxB,IAAoC,QAAOD,QAAP,MAAoB,QAAxD,IAAoEA,QAApE,GACHA,QAAQ,CAACC,YAAD,CADL,GAEH,OAAOA,YAAP,KAAwB,UAAxB,GACEA,YAAY,CAACD,QAAD,CADd,GAEEA,QAJN;AAKD;AAED,OAAM,SAAUE,mBAAV,CACJC,UADI,EAEJF,YAFI,EAE+C;AAEnD,MAAI,OAAOE,UAAP,KAAsB,QAA1B,EAAoC,OAAOA,UAAU,CAACC,KAAX,CAAiB,QAAjB,CAAP;;AACpC,MAAIC,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAJ,EAA+B;AAC7B,WAAOA,UAAU,CAACI,GAAX,CAAgB,kBAAD,EAA+B;AACnD,UAAI,OAAOP,QAAP,KAAoB,QAAxB,EAAkC,OAAOA,QAAP;AAElC,UAAMQ,YAAY,GAAG,OAAOR,QAAQ,CAACQ,YAAhB,KAAiC,QAAjC,GACjBR,QAAQ,CAACQ,YADQ,GAEjBT,kBAAkB,CAACC,QAAD,EAAWC,YAAX,CAFtB;AAGA,6CAAYD,QAAZ;AAAsBQ;AAAtB;AANK,MAAP;AAQD;;AACD,SAAO,EAAP;AACD","names":["parsedCategoryText","category","categoryText","getParsedCategories","categories","split","Array","isArray","map","categoryName"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/util/parser.ts"],"sourcesContent":["import { CalendarCategory, CalendarCategoryTextFunction } from 'types'\n\nexport function parsedCategoryText (\n  category: CalendarCategory,\n  categoryText: string | CalendarCategoryTextFunction\n): string {\n  return typeof categoryText === 'string' && typeof category === 'object' && category\n    ? category[categoryText]\n    : typeof categoryText === 'function'\n      ? categoryText(category)\n      : category\n}\n\nexport function getParsedCategories (\n  categories: CalendarCategory | CalendarCategory[],\n  categoryText: string | CalendarCategoryTextFunction\n): CalendarCategory[] {\n  if (typeof categories === 'string') return categories.split(/\\s*,\\s/)\n  if (Array.isArray(categories)) {\n    return categories.map((category: CalendarCategory) => {\n      if (typeof category === 'string') return category\n\n      const categoryName = typeof category.categoryName === 'string'\n        ? category.categoryName\n        : parsedCategoryText(category, categoryText)\n      return { ...category, categoryName }\n    })\n  }\n  return []\n}\n"]}]}