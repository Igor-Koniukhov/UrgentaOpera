{"remainingRequest":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/igor/1_pet_projects/4_todo_urgenta/frontend/src/views/ToDo.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/src/views/ToDo.vue","mtime":1650298088748},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/css-loader/dist/cjs.js","mtime":1649410682040},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649410682492},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/postcss-loader/src/index.js","mtime":1649410682180},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1649410681732},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1649410681772},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/frontend/node_modules/vue-loader/lib/index.js","mtime":1649410682324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudi1saXN0LmJvYXJkIHsKICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgbWF4LXdpZHRoOiAzMDBweDsKICB3aWR0aDogMTAwJTsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwp9Cg=="},{"version":3,"sources":["ToDo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToDo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\" >\n    <h1 class=\"text-center mt-9\" v-if=\"!$store.state.auth.isLogin\">For working with ToDo application you need to be registered or login.</h1>\n    <div v-if=\"$store.state.auth.isLogin\">\n      <field-add-task  />\n      <div class=\"pa-3\" v-if=\"$store.state.todo.tasks.length\">\n        <draggable handle=\".handle-board\" group=\"board\" v-model=\"boards\">\n          <list-tasks\n              class=\"ma-1 board\"\n              v-for=\"(board, index) in boards\"\n              :key=\"board.list\"\n              :index=\"index\"\n              :board=\"board\"\n              :list=\"board.list\"\n          />\n        </draggable>\n      </div>\n\n      <no-tasks v-else />\n      <button-done-sorting\n          v-if=\"$store.state.todo.sorting\"\n          :toggleSorting=\"toggleSorting\"\n      />\n      <button-done-sorting\n          v-if=\"$store.state.todo.boardSorting\"\n          :toggleSorting=\"toggleBoardSorting\"\n      />\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\n// @ is an alias to /src\n\nexport default {\n  name: \"ToDo\",\n  components: {\n    FieldAddTask: require(\"@/components/Todo/FieldAddTask.vue\").default,\n    ListTasks: require(\"@/components/Todo/ListTasks.vue\").default,\n    NoTasks: require(\"@/components/Todo/NoTasks.vue\").default,\n    ButtonDoneSorting: require(\"@/components/Todo/ButtonDoneSorting.vue\")\n      .default,\n    draggable,\n  },\n  data() {\n    return {\n      toggleSorting: {\n        commitMessage: \"todo/toggleSorting\",\n        buttonTitle: \"finish task sorting\",\n      },\n      toggleBoardSorting: {\n        commitMessage: \"todo/toggleBoardSorting\",\n        buttonTitle: \"finish board sorting\",\n      },\n    };\n  },\n  computed: {\n    boards: {\n      get() {\n        return this.$store.state.todo.boards;\n      },\n      set(value) {\n        this.$store.dispatch(\"todo/setBoards\", value);\n      },\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.v-list.board {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  max-width: 300px;\n  width: 100%;\n  display: inline-flex;\n  flex-direction: column;\n}\n</style>\n"]}]}