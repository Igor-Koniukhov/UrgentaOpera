{"remainingRequest":"/home/igor/1_pet_projects/4_todo_urgenta/todo-vue2/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/igor/1_pet_projects/4_todo_urgenta/todo-vue2/src/views/ToDo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/igor/1_pet_projects/4_todo_urgenta/todo-vue2/src/views/ToDo.vue","mtime":1649665541997},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/todo-vue2/node_modules/cache-loader/dist/cjs.js","mtime":1649410681772},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/todo-vue2/node_modules/babel-loader/lib/index.js","mtime":1649410682196},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/todo-vue2/node_modules/cache-loader/dist/cjs.js","mtime":1649410681772},{"path":"/home/igor/1_pet_projects/4_todo_urgenta/todo-vue2/node_modules/vue-loader/lib/index.js","mtime":1649410682324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBkcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIjsKLy8gQCBpcyBhbiBhbGlhcyB0byAvc3JjCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlRvRG8iLAogIGNvbXBvbmVudHM6IHsKICAgIEZpZWxkQWRkVGFzazogcmVxdWlyZSgiQC9jb21wb25lbnRzL1RvZG8vRmllbGRBZGRUYXNrLnZ1ZSIpLmRlZmF1bHQsCiAgICBMaXN0VGFza3M6IHJlcXVpcmUoIkAvY29tcG9uZW50cy9Ub2RvL0xpc3RUYXNrcy52dWUiKS5kZWZhdWx0LAogICAgTm9UYXNrczogcmVxdWlyZSgiQC9jb21wb25lbnRzL1RvZG8vTm9UYXNrcy52dWUiKS5kZWZhdWx0LAogICAgQnV0dG9uRG9uZVNvcnRpbmc6IHJlcXVpcmUoIkAvY29tcG9uZW50cy9Ub2RvL0J1dHRvbkRvbmVTb3J0aW5nLnZ1ZSIpCiAgICAgIC5kZWZhdWx0LAogICAgZHJhZ2dhYmxlLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRvZ2dsZVNvcnRpbmc6IHsKICAgICAgICBjb21tOiAidG9nZ2xlU29ydGluZyIsCiAgICAgICAgYnV0dG9uVGl0bGU6ICJmaW5pc2ggdGFzayBzb3J0aW5nIiwKICAgICAgfSwKICAgICAgdG9nZ2xlQm9hcmRTb3J0aW5nOiB7CiAgICAgICAgY29tbTogInRvZ2dsZUJvYXJkU29ydGluZyIsCiAgICAgICAgYnV0dG9uVGl0bGU6ICJmaW5pc2ggYm9hcmQgc29ydGluZyIsCiAgICAgIH0sCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJvYXJkczogewogICAgICBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnRvZG8uYm9hcmRzOwogICAgICB9LAogICAgICBzZXQodmFsdWUpIHsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidG9kby9zZXRCb2FyZHMiLCB2YWx1ZSk7CiAgICAgIH0sCiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["ToDo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ToDo.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <field-add-task />\n    <div class=\"pa-3\" v-if=\"$store.state.todo.tasks.length\">\n      <draggable handle=\".handle-board\" group=\"board\" v-model=\"boards\">\n        <list-tasks\n          class=\"ma-1 board\"\n          v-for=\"(board, index) in boards\"\n          :key=\"board.list\"\n          :index=\"index\"\n          :board=\"board\"\n          :list=\"board.list\"\n        />\n      </draggable>\n    </div>\n\n    <no-tasks v-else />\n    <button-done-sorting\n      v-if=\"$store.state.sorting\"\n      :toggleSorting=\"toggleSorting\"\n    />\n    <button-done-sorting\n      v-if=\"$store.state.boardSorting\"\n      :toggleSorting=\"toggleBoardSorting\"\n    />\n  </div>\n</template>\n\n<script>\nimport draggable from \"vuedraggable\";\n// @ is an alias to /src\n\nexport default {\n  name: \"ToDo\",\n  components: {\n    FieldAddTask: require(\"@/components/Todo/FieldAddTask.vue\").default,\n    ListTasks: require(\"@/components/Todo/ListTasks.vue\").default,\n    NoTasks: require(\"@/components/Todo/NoTasks.vue\").default,\n    ButtonDoneSorting: require(\"@/components/Todo/ButtonDoneSorting.vue\")\n      .default,\n    draggable,\n  },\n  data() {\n    return {\n      toggleSorting: {\n        comm: \"toggleSorting\",\n        buttonTitle: \"finish task sorting\",\n      },\n      toggleBoardSorting: {\n        comm: \"toggleBoardSorting\",\n        buttonTitle: \"finish board sorting\",\n      },\n    };\n  },\n  computed: {\n    boards: {\n      get() {\n        return this.$store.state.todo.boards;\n      },\n      set(value) {\n        this.$store.dispatch(\"todo/setBoards\", value);\n      },\n    },\n  },\n};\n</script>\n<style lang=\"scss\">\n.v-list.board {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  max-width: 300px;\n  width: 100%;\n  display: inline-flex;\n  flex-direction: column;\n}\n</style>\n"]}]}